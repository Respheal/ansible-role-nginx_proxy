---

- name: Check required NGINX variables (strings)
  fail:
    msg: |
      Invalid value for variable for '{{ item }}': {{ lookup('vars', item) }}

      Supported types  : String
      Supported values : Any non-null string
  when: >-
    lookup('vars', item) is not string
    or lookup('vars', item) == 0
  with_items: "{{ nginx_required_strings }}"

- name: (Debian) Handle SSL errata
  set_fact:
    nginx_ssl_protocols:
      - TLSv1.2
  when: >-
    (ansible_distribution == "Ubuntu"
    and ansible_distribution_version is version('16.04', '=='))
    or
    (ansible_distribution == "Debian"
    and ansible_distribution_version is version('9', '=='))

- name: Add NGINX to Let's Encrypt services
  set_fact:
    certbot_stop_services: "{{ certbot_stop_services + [nginx_daemon] }}"
  when:
    - use_letsencrypt is defined
    - use_letsencrypt
    - certbot_stop_services is defined
    - nginx_daemon not in certbot_stop_services

- name: Initialize Let's Encrypt services with NGINX
  set_fact:
    certbot_stop_services:
      - "{{ nginx_daemon }}"
  when:
    - use_letsencrypt is defined
    - use_letsencrypt
    - certbot_stop_services is not defined

- name: Check variable 'systemd_restart_setting'
  fail:
    msg: |
      Invalid value for variable 'systemd_restart_setting': '{{ systemd_restart_setting }}'

      'systemd_restart_setting' must be one of the following:
      no, on-success, on-failure, on-abnormal, on-watchdog, on-abort, always.
  failed_when: >-
    (systemd_restart_setting not in
    ['no', 'on-success', 'on-failure', 'on-abnormal',
    'on-watchdog', 'on-abort', 'always']
    or systemd_restart_setting is not string
    or systemd_restart_setting == 0)
    and (nginx_systemd_restart
    or systemd_restart)
